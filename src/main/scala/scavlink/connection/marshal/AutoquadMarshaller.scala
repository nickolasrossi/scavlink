// Code generated by sbt-mavgen. Manual edits will be overwritten
package scavlink.connection.marshal

import scavlink.message.{Message, Bundle}
import scavlink.message.autoquad._
import scavlink.message.enums._
import akka.util.{ByteIterator, ByteStringBuilder}

object AutoquadMarshaller extends BundleMarshaller {
  val bundle = Bundle.autoquad

  def magic = Map(150 -> 241)

  def _marshal(message: Message)(implicit builder: ByteStringBuilder) = message match {
    case AqTelemetryF(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u) => _float(b); _float(c); _float(d); _float(e); _float(f); _float(g); _float(h); _float(i); _float(j); _float(k); _float(l); _float(m); _float(n); _float(o); _float(p); _float(q); _float(r); _float(s); _float(t); _float(u); _uint16_t(a)
  }

  def _unmarshal(msgId: Int)(implicit iter: ByteIterator) = msgId match {
    case 150 => AqTelemetryF(value1=float, value2=float, value3=float, value4=float, value5=float, value6=float, value7=float, value8=float, value9=float, value10=float, value11=float, value12=float, value13=float, value14=float, value15=float, value16=float, value17=float, value18=float, value19=float, value20=float, index=uint16_t)
  }
}
