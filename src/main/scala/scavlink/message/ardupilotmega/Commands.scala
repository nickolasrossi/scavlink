// Code generated by sbt-mavgen. Manual edits will be overwritten
package scavlink.message.ardupilotmega

import scavlink.message._
import scavlink.message.enums.MavCmd

import scavlink.message.common.CommandLong
import scavlink.coord.Coordinates
import scavlink.coord.Geo

/**
 * Mission command to perform motor test
 * @param motorSequenceNumber motor sequence number (a number from 1 to max number of motors on the vehicle)
 * @param throttleType throttle type (0=throttle percentage, 1=PWM, 2=pilot throttle channel pass-through. See MOTOR_TEST_THROTTLE_TYPE enum)
 * @param throttle throttle
 * @param timeout timeout (in seconds)
 */
case class DoMotorTest(targetSystem: SystemId = 0, targetComponent: ComponentId = 0, motorSequenceNumber: Float = 0, throttleType: Float = 0, throttle: Float = 0, timeout: Float = 0)
extends Command {
  val cmd = MavCmd(209)
  val message = CommandLong(targetSystem, targetComponent, cmd, param1 = motorSequenceNumber, param2 = throttleType, param3 = throttle, param4 = timeout)
  override def toString = cmd.toString + " motorSequenceNumber=" + motorSequenceNumber + " throttleType=" + throttleType + " throttle=" + throttle + " timeout=" + timeout 
}

/**
 * Mission command to operate EPM gripper
 * @param gripperNumber gripper number (a number from 1 to max number of grippers on the vehicle)
 * @param gripperAction gripper action (0=release, 1=grab. See GRIPPER_ACTIONS enum)
 */
case class DoGripper(targetSystem: SystemId = 0, targetComponent: ComponentId = 0, gripperNumber: Float = 0, gripperAction: Float = 0)
extends Command {
  val cmd = MavCmd(211)
  val message = CommandLong(targetSystem, targetComponent, cmd, param1 = gripperNumber, param2 = gripperAction)
  override def toString = cmd.toString + " gripperNumber=" + gripperNumber + " gripperAction=" + gripperAction 
}
